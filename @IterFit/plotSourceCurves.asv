function plotSourceCurves(IF,SourceInd,Args)


arguments
    IF;
    SourceInd=1;
    Args.CloseAll = true;
    Args.SourceInd= [];
    Args.Color = [0.5,0.2,0.8];
    Args.plotXYhist = false;
    Args.TimeBinSize =10;
    Args.plotBinnedHist = false;
    Args.Coo = [];
    Args.PlotPlx = false;
    
end


TS = IF.getTimeSeriesField(SourceInd,{'X','Y','MAG_PSF'});


if Args.CloseAll
    close all;
end
figure;



ModelX = IF.Asx * IF.ParS(:,IndSource);
ax1=subplot(3,1,1);
plot(IF.JD-2450000,TS(:,3),'.','Color',Args.Color);
ylabel('I [mag]','interpreter','latex')
set(gca,'YDir','reverse')
ax2= subplot(3,1,2);
plot(IF.JD-2450000,TS(:,1),'.','Color',Args.Color);
hold on;
plot(IF.JD-2450000,H*PMX);
ylabel('X [pix]','interpreter','latex')
hold off;
ax3= subplot(3,1,3);
plot(IF.JD-2450000,TS(:,2),'.','Color',Args.Color);
hold on;
plot(IF.JD-2450000,H*PMY);
ylabel('Y [pix]','interpreter','latex')
xlabel('JD','interpreter','latex');

linkaxes([ax1,ax2,ax3],'x');




figure;
ax1 = subplot(3,1,1);
%DX = (H*CM.pm_x(:,Sind)-CM.MS.Data.X(:,Sind)).*CM.pix2mas;
OutMag=isoutlier(TS(:,3),"movmedian",Args.TimeBinSize);
BMag = timeSeries.bin.binningFast([IF.JD(~OutMag)-2450000, TS(~OutMag,3)], Args.TimeBinSize,[NaN NaN],{'MidBin', @nanmean, @tools.math.stat.rstd,@numel});
FlagMag = ~(BMag(:,2)==0 | isnan(BMag(:,2)));
errorbar(BMag(FlagMag,1),BMag(FlagMag,2),BMag(FlagMag,3)./sqrt(BMag(FlagMag,4)),'.')
%hold on;
%plot(IF.JD-2450000,H*CM.pm_x(:,Sind));
%plot(CM.MS.JD-2450000,H*CM.pm_x(:,Sind));
ylabel('I','interpreter','latex')
xlabel('JD','interpreter','latex');
set(gca,'YDir','reverse')

ax2 = subplot(3,1,2);

DX = (H*PMX-TS(:,1));
OutX=isoutlier(DX);
Bx = timeSeries.bin.binningFast([IF.JD(~OutX)-2450000, TS(~OutX,1)], Args.TimeBinSize,[NaN NaN],{'MidBin', @nanmean, @tools.math.stat.rstd,@numel});
Bx(Bx(:,3)==0,3) = Inf;
FlagX = ~(Bx(:,2)==0 | isnan(Bx(:,2)) | Bx(:,4)<2);
errorbar(Bx(FlagX ,1),Bx(FlagX ,2),Bx(FlagX ,3)./sqrt(Bx(FlagX,4)),'.');
hold on;
plot(IF.JD-2450000,H*PMX);
ylabel('X [pix]','interpreter','latex')
xlabel('JD','interpreter','latex');


ax3 = subplot(3,1,3);
DY = (H*PMY-TS(:,2));
OutY=isoutlier(DY);
By = timeSeries.bin.binningFast([IF.JD(~OutY)-2450000, TS(~OutY,2)], Args.TimeBinSize,[NaN NaN],{'MidBin', @nanmean, @tools.math.stat.rstd,@numel});
By(By(:,3)==0,3) = Inf;
FlagY = ~(By(:,2)==0 | isnan(By(:,2))| Bx(:,4)<2);
errorbar(By(FlagY ,1),By(FlagY ,2),By(FlagY ,3)./sqrt(By(FlagY,4)),'.')
hold on;
plot(IF.JD-2450000,H*PMY);
ylabel('Y [pix]','interpreter','latex')
xlabel('JD','interpreter','latex');

linkaxes([ax1,ax2,ax3],'x');



if Args.PlotPlx 
    figure; 
    [Ecoo] = celestial.SolarSys.calc_vsop87(IF.JD, 'Earth', 'e', 'E');
    Hpm = designMatrixPM(IF);
    Hzero= zeros(size(Hpm));
    
    X = Ecoo(1,:)'; Y = Ecoo(2,:)'; Z = Ecoo(3,:)';
    
    RA = Args.Coo(1);
    Dec = Args.Coo(2);
    RAPlxTerm= -1/400*(X.*sin(RA)- Y.*cos(RA)); 
    DecPlxTerm= 1/400*(X.*cos(RA).*sin(RA) + Y.*sin(RA).*sin(Dec) - Z.*cos(Dec)) ; 
    H = [Hpm,Hzero,RAPlxTerm;Hzero,Hpm,DecPlxTerm];
    PosPlx = H*IF.PMPlx(1:5,SourceInd);
    XPlx = PosPlx(1:numel(PosPlx)/2);
    YPlx = PosPlx(numel(PosPlx)/2+1:end);
    ax2= subplot(2,1,1);
    %Bx = timeSeries.bin.binningFast([IF.JD(~OutX)-2450000, TS(~OutX,1)], Args.TimeBinSize,[NaN NaN],{'MidBin', @nanmean, @tools.math.stat.rstd,@numel});
    %Flag = ~(Bx(:,2)==0 | isnan(Bx(:,2)));
    Bx = timeSeries.bin.binningFast([Hpm(~OutX,2), TS(~OutX,1)], Args.TimeBinSize,[NaN NaN],{'MidBin', @nanmean, @tools.math.stat.rstd,@numel});
    Bx(Bx(:,3)==0,3) = Inf;
    FlagX = ~(Bx(:,2)==0 | isnan(Bx(:,2)) | Bx(:,4)<2);
    By = timeSeries.bin.binningFast([Hpm(~OutY,2), TS(~OutY,2)], Args.TimeBinSize,[NaN NaN],{'MidBin', @nanmean, @tools.math.stat.rstd,@numel});
    By(By(:,3)==0,3) = Inf;
    FlagY = ~(By(:,2)==0 | isnan(By(:,2))| Bx(:,4)<2);


    errorbar(Bx(FlagX ,1),Bx(FlagX ,2),Bx(FlagX ,3)./sqrt(Bx(FlagX,4)),'.');
    hold on;
    plot(Hpm(:,2),XPlx);
    ylabel('X [pix]','interpreter','latex')
    hold off;
    ax2= subplot(2,1,2);
    %By = timeSeries.bin.binningFast([IF.JD(~OutY)-2450000, TS(~OutY,2)], Args.TimeBinSize,[NaN NaN],{'MidBin', @nanmean, @tools.math.stat.rstd,@numel});
    %Flag = ~(By(:,2)==0 | isnan(By(:,2)));
    errorbar(By(FlagY ,1),By(FlagY ,2),By(FlagY ,3)./sqrt(By(FlagY,4)),'.')
    hold on;
    plot(Hpm(:,2),YPlx);
    ylabel('Y [pix]','interpreter','latex')
    xlabel('JD','interpreter','latex');
    
    
    HpmSrc = IF.designMatrixPM('JD',Bx(FlagX,1),'JD0',0);
    Hzero = zeros(size(HpmSrc));
    RAPlxTermInterp = interp1(Hpm(:,2),RAPlxTerm,Bx(FlagX,1));
    DecPlxTermInterp = interp1(Hpm(:,2),DecPlxTerm,By(FlagY,1));
    Hbin = [HpmSrc,Hzero,RAPlxTermInterp;Hzero,HpmSrc,DecPlxTermInterp];
    
    PosPlx = Hbin*IF.PMPlx(1:5,SourceInd);
    XPlx = PosPlx(1:numel(PosPlx)/2);
    YPlx = PosPlx(numel(PosPlx)/2+1:end);
    
    
    %Delta chi^2 = chi^2_{pm}- \chi^2_{plx} 
    ChiPlxX  =sum(((XPlx - Bx(FlagX,2))).^2,'omitnan');
    ChiPMX  =sum(((HpmSrc*PMX - Bx(FlagX,2))).^2,'omitnan');
    
    ChiPlxY  =sum(((YPlx - By(FlagY,2))).^2,'omitnan');
    ChiPMY  =sum(((HpmSrc*PMY - By(FlagY,2))).^2,'omitnan');
    
    figure;
    
    plot(1-ChiPlxX/ChiPMX,1-ChiPlxY/ChiPMY,'*')
    xlabel('$\Delta \chi^2$ X','interpreter','latex')
    ylabel('$\Delta \chi^2$ Y','interpreter','latex')
    
    
    
    
    
end